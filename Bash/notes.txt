Change to home directory (~):
	cd

Manual pages:
	man ls
		q (exit)
		b (back)
		space (down)
		/use a long listing (search)

Print working directory:
	pwd

Hidden files start with a full stop, to see them:
	ls -a

Special files:
	. (current directory)
	.. (parent directory)

History:
	Use up and down cursors, or Ctrl-p and Ctrl-n.

Reading the contents of a file:
	cat filename
		If you cat a binary file it may mess up your terminal, if so use the reset command.
	less filename
		q (exit)
		b (back)
		space (down)
		/use a long listing (search)

See file types:
	file filename
	file *

Remove file:
	rm filename

Make file:
	touch filename
		If the file already exists it's access date gets updated.
	cat > filename
		content...
		Ctrl-d (save & exit)

Rename file:
	mv filename1 filename2

Move file:
	mv filename destinationdirectoryname
	mv filename1 filename2 ... destinationdirectoryname

Copy file:
	cp filename destinationdirectoryname
	cp filename .
	cp filename destinationdirectoryname/filename
	cp filename destinationdirectoryname/newfilename
	cp * destinationdirectoryname

Copy directory:
	cp -R sourcedirectoryname destinationdirectoryname  

Make directory:
	mkdir directoryname
	mkdir directoryname1 directoryname2 ...

Remove directory:
	rmdir directoryname (will only remove empty directories)
	rm -r directoryname

Prompt when performing dangerous commands:
	cp -i
	mv -i
	rm -i

File names:
	Can be called anything exept /.
	Hidden files start with a full stop.
	File names are case sensitive.
	Extensions are optional.

List files recursively:
	ls -R

List files that match a prefix:
	ls a* (matches files that start with a)

Brace expansion:
	Brace expansion comes before wildcard expansion.
	touch {a,b,c}.txt
		= touch a.txt b.txt c.txt
	touch file-{1..10}.txt
		= touch file-1.txt file-2.txt ...
	mv *{txt,jpg} destinationdirectoryname
		= mv *txt *jpg destinationdirectoryname

Save output of a command:
	ls > filename
	cat > filename 
	echo "hello world" > filename

Append output of a command using >>.

Command substitution:
	echo "hello, $(whoami)"
	echo "The date is $(date)"
	echo "The host name is `hostname`" (old style)

See the first few lines in output:
	ls | head

See the last few lines in output:
	ls | tail

See only the first line in output:
	ls | head -n1

Background jobs:
	Bring a command to the foreground:
		fg %1 (job id is 1)
	Send a command to the background:
		bg %1 (job id is 1)
	To stop a background job messing up your screen, write output to a file:
		./command > filename &
	See all jobs for current shell:
		jobs
	Kill a running job by id:
		kill %1 (job id is 1)
	Kill a running job by process id:
		kill 4396
	Hard kill:
		kill -KILL %1

Get a list of all running processes:
	Linux:
		ps -e (get processes running for everyone)
	Mac OS:
		ps ax

To see task manager equivalent:
	top

Aliases:
	To see a list of configured aliases:
		alias
	Add alias:
		alias ls='ls --color=auto'
	Remove alias:
		unalias ls
	Remove all aliases:
		unalias -a
	Run command without alias:
		\ls

Customisation:
	~/.bashrc
		Read and executed everytime bash starts for a non login session.
	~/.profile
		Read and executed everytime bash starts for a login session, using ssh. Typically .profile just runs .bashrc.
	Mac OS:
		These files do not exist by default. The terminal starts as a login shell, so only .profile is required.

Environment variables:
	Prompt: $PS1
	Home directory: $HOME
	Directories containing executables: $PATH
	Set a variable value:
		PS1='new value'
	Get a list of all variables:
		env
	If a variable is needed in a subprocess it must be exported:
		export EDITOR='nano'

Command directory must be listed in $PATH for it to be executed, otherwise use the ./command.

Jump forward in line using Alt-f.
Jump backward in line using Alt-b.
Move to start of line using Ctrl-a.
Move to end of line using Ctrl-e.
Move forward using Ctrl-f.
Move backward using Ctrl-b.
Delete a char using Ctrl-d.
Delete word using Alt-d.
Delete a char backward using Ctrl-h.
Delete a word backward using Ctrl-w.
Delete rest of line using Ctrl-k.
Delete from start of line using Ctrl-u.
Search history using Ctrl-r.
Suspend a running job Ctrl-z.

Vim:
	vimtutor
 
Mac OS:
	Open non-text files:
		open filename
		open . (opens current directory)

	File names:
		File names are not case sensitive.

	Editors:
		nano filename
		emacs filename